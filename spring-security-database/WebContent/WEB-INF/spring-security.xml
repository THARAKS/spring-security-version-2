<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">




    <!-- enable use-expressions -->
	<!-- <http auto-config="true" use-expressions="true">
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
	
		<form-login 
		    login-page="/sign-in" 
		    default-target-url="/welcome"
		 
			authentication-failure-url="/sign-in?error" 
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/sign-in?logout"  />
		    
		enable csrf protection
		<csrf/>
	</http> -->
	
	
	 <http auto-config="true">
      <intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"  />
        <form-login login-processing-url="/j_spring_security_check" login-page="/signin"
            username-parameter="username" password-parameter="password"
            default-target-url="/admin" authentication-failure-url="/signin?error" />
        <logout logout-url="/j_spring_security_logout"  logout-success-url="/signin?logout" />     
        <csrf  /> 
    </http>
	
	
	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query=
					"select username,password, enabled from users where username=?"
				authorities-by-username-query=
					"select username, role from user_roles where username =?  " />
		</authentication-provider>
	</authentication-manager>

</beans:beans>